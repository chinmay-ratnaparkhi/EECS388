TI ARM Assembler PC v5.1.7 Thu Dec 11 12:06:56 2014

Tools Copyright (c) 1996-2014 Texas Instruments Incorporated
../AsmComputeY.asm                                                   PAGE    1

       1                    ;;*****************************************************************************
       2                    ;;
       3                    ;;      Assembly language subroutine
       4                    ;;
       5                    ;;              Author:                 Gary J. Minden
       6                    ;;              Organization:   KU/EECS/EECS 388
       7                    ;;              Date:                   2014-04-18
       8                    ;;              Version:                1.0
       9                    ;;
      10                    ;;              Purpose:                Assembly language subroutine
      11                    ;;
      12                    ;;              Notes:
      13                    ;;
      14                    ;;*****************************************************************************
      15                    ;;
      16                    
      17                    ;;
      18                    ;;      This subroutine computes a value based on four input arguements.
      19                    ;;      The arguments are assumed to be in CPU registers R0 - R3
      20                    ;;        (AKA A1 - A4)
      21                    ;;
      22                    
      23                    ;;      Declare sections and external references
      24                    
      25                                    .global         AsmComputeY                             ; Declare entry point as a glo
      26                    
      27 00000000                           .text                                                           ; Program sections
      28                    
      29 00000000           AsmComputeY:                                                                    ; Entry point
      30                    
      31                    ;;
      32                    ;;      Save necessary registers
      33                    ;;
      34                    ;;      Since this subroutine does not use registers other than R0 - R3,
      35                    ;;        and we do not call another subroutine, we don't need to save
      36                    ;;        any registers.
      37                    ;;
      38                    
      39                    ;;
      40                    ;;      Allocate local variables on the Stack
      41                    ;;
      42                    ;;      Since this subroutine does not have local variables,
      43                    ;;        no Stack space need be allocated.
      44                    ;;
      45                    
      46                    ;;
      47                    ;;This solves the Y value  and returns the result in R0
      48                    ;; Y =  (D / A) & ((D + (C * A)) | D )
      49                    ;;
      50                    
      51 00000000 F200FB02                  MUL             R2,R2,R0 ; [KEEP 32-BIT INS]
      52 00000004 18D2                      ADDS            R2,R2,R3 ; [ORIG 16-BIT INS]
      53 00000006 431A                      ORRS            R2,R2,R3 ; [ORIG 16-BIT INS]
      54 00000008 F3F0FBB3                  UDIV            R3,R3,R0 ; [KEEP 32-BIT INS]
      55 0000000c 0002EA13                  ANDS            R0,R3,R2 ; [KEEP 32-BIT INS]
TI ARM Assembler PC v5.1.7 Thu Dec 11 12:06:56 2014

Tools Copyright (c) 1996-2014 Texas Instruments Incorporated
../AsmComputeY.asm                                                   PAGE    2

      56                    
      57                    
      58                    
      59                    ;;
      60                    ;;      Return from the subroutine with the result in R0
      61                    ;;
      62 00000010 4770                      BX                      LR                              ; Branch to the program addres
      63                    
      64                                    .end

--------------------------
Thumb2 Statistics
--------------------------
Number of Thumb2 ins converted to Thumb = 0 (0%)
Number of Thumb ins in input = 5 (62%)
Number of Thumb2 ins encoded as Thumb2 = 3 (100%)
Number of Thumb2 ins converted to 2 OPND Thumb = 1


No Assembly Errors, No Assembly Warnings
